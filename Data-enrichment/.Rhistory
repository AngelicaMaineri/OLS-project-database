df_long$id <- factor(df_long$id)
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1),
part2!="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6!="[NA](NA)" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
## 2. Load data ----
df = read_delim("Data/projects_domain.csv") # Load data with added domain
df_people = read_delim("C:/Users/angel/Documents/GitHub/ols-program-paper/data/people.csv") # Load updated copy from the paper repo
## 3. data prep
colnames(df_people)[1] = c("githandle") #rename firs col
df_people_small = df_people |>
select(c("githandle", "first-name", "last-name")) |>
mutate(name = paste(`first-name`, `last-name`, sep = ' ')) |>
mutate(gitfull = paste("https://github.com/", githandle, sep = ''))  |>
select(c("name", "gitfull"))
df_people_small
View(df_people_small)
#solve duplicates!!!!!
list_names = df_people_small |>
select(c(name)) |>
mutate(n=1) |>
group_by(name) |>
count(n) |>
filter(nn>1) |>
print()
df_people_small$drop = 0
df_people_small$drop[df_people_small$gitfull=="https://github.com/david-selassie-opoku"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/gladys-jerono-rotich"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/hilyatuz-zahroh"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/iris-san-pedro"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/laurah-nyasita-ondari"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/marta-lloret-llinares"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/muhammetcelik"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/pradeep-eranti"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/umar-farouk-ahmad"] = 1
df_people_small = df_people_small |>
filter(drop == 0)
colnames(df_people_small)
cols = c("name", "gitfull")
df_people_small = df_people_small[, cols]
colnames(df_people_small)
# split participants
df = df |>
separate(participants, into = c("part1", "part2", "part3", "part4", "part5", "part6"), sep=",[ ]" ) |>
print(n=100)
# long format
df_long = df |>
gather(partnum, name, part1:part6, factor_key=TRUE)
# if df$part1-6 in df_people_small, then change string to [df_part1-6](gitfull)
df_long = left_join(df_long, df_people_small, by=c("name"))
df_long = df_long |>
mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long
# back to wide format
df_long$id <- factor(df_long$id)
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1),
part2!="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6!="[NA](NA)" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("...1", "id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
View(df2)
# export
write.csv(df_dom, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
rm(list = ls())
setwd("C:/Users/angel/Documents/GitHub/OLS-project-database/Data-enrichment")
## 2. Load data ----
df = read_delim("Data/projects_domain.csv") # Load data with added domain
df_people = read_delim("C:/Users/angel/Documents/GitHub/ols-program-paper/data/people.csv") # Load updated copy from the paper repo
## 3. data prep
colnames(df_people)[1] = c("githandle") #rename firs col
df_people_small = df_people |>
select(c("githandle", "first-name", "last-name")) |>
mutate(name = paste(`first-name`, `last-name`, sep = ' ')) |>
mutate(gitfull = paste("https://github.com/", githandle, sep = ''))  |>
select(c("name", "gitfull"))
df_people_small
#solve duplicates!!!!!
list_names = df_people_small |>
select(c(name)) |>
mutate(n=1) |>
group_by(name) |>
count(n) |>
filter(nn>1) |>
print()
df_people_small$drop = 0
df_people_small$drop[df_people_small$gitfull=="https://github.com/david-selassie-opoku"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/gladys-jerono-rotich"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/hilyatuz-zahroh"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/iris-san-pedro"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/laurah-nyasita-ondari"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/marta-lloret-llinares"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/muhammetcelik"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/pradeep-eranti"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/umar-farouk-ahmad"] = 1
df_people_small = df_people_small |>
filter(drop == 0)
colnames(df_people_small)
cols = c("name", "gitfull")
df_people_small = df_people_small[, cols]
# split participants
df = df |>
separate(participants, into = c("part1", "part2", "part3", "part4", "part5", "part6"), sep=",[ ]" ) |>
print(n=100)
# long format
df_long = df |>
gather(partnum, name, part1:part6, factor_key=TRUE)
df_long = df_long |>
mutate(name = paste("<a href=", gitfull, ">", name, "</a>", sep = "")) |>
#mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long
# long format
df_long = df |>
gather(partnum, name, part1:part6, factor_key=TRUE)
# if df$part1-6 in df_people_small, then change string to [df_part1-6](gitfull)
df_long = left_join(df_long, df_people_small, by=c("name"))
df_long = df_long |>
mutate(name = paste("<a href=\"", gitfull, "\">", name, "</a>", sep = "")) |> #   <a href="https://pypi.org/project/plenpy/">plenoptic</a>
#mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long
# back to wide format
df_long$id <- factor(df_long$id)
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1),
part2!="[NA](NA)" & part3=="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4=="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5=="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6=="[NA](NA)" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="[NA](NA)" & part3!="[NA](NA)" & part4!="[NA](NA)" & part5!="[NA](NA)" & part6!="[NA](NA)" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("...1", "id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
df_wide$participants
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1),
part2!="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6!="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants<a href=\"NA\">NA</a><a href=\"NA\">NA</a>
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("...1", "id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1),
part2!="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6!="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("...1", "id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
View(df2)
#' OLS-Project-databases
#' Assign domain
#'
#' Created on 28/04/2023 by Angelica Maineri
#'
#' Aim: write script to automatically tag the domain (SSH, LSH, NES, Other)
#' based on keywords
## 1. Load and install packages -----
# Uncomment (= remove the #) the following lines as fit:
#install.packages("tidyverse")
library(tidyverse) # for most operations
rm(list = ls())
setwd("C:/Users/angel/Documents/GitHub/OLS-project-database/Data-enrichment")
## 2. Load data ----
df = read_delim("Data/projects_domain.csv") # Load data with added domain
df_people = read_delim("C:/Users/angel/Documents/GitHub/ols-program-paper/data/people.csv") # Load updated copy from the paper repo
## 3. data prep
colnames(df_people)[1] = c("githandle") #rename firs col
## 4. Merge
#select only first and last names and github handle
#create full name (NAME) in df_people
#create full gitlINK (GITFULL) in df_people
df_people_small = df_people |>
select(c("githandle", "first-name", "last-name")) |>
mutate(name = paste(`first-name`, `last-name`, sep = ' ')) |>
mutate(gitfull = paste("https://github.com/", githandle, sep = ''))  |>
select(c("name", "gitfull"))
df_people_small
#solve duplicates!!!!!
list_names = df_people_small |>
select(c(name)) |>
mutate(n=1) |>
group_by(name) |>
count(n) |>
filter(nn>1) |>
print()
df_people_small$drop = 0
df_people_small$drop[df_people_small$gitfull=="https://github.com/david-selassie-opoku"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/gladys-jerono-rotich"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/hilyatuz-zahroh"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/iris-san-pedro"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/laurah-nyasita-ondari"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/marta-lloret-llinares"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/muhammetcelik"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/pradeep-eranti"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/umar-farouk-ahmad"] = 1
df_people_small = df_people_small |>
filter(drop == 0)
colnames(df_people_small)
cols = c("name", "gitfull")
df_people_small = df_people_small[, cols]
# split participants
df = df |>
separate(participants, into = c("part1", "part2", "part3", "part4", "part5", "part6"), sep=",[ ]" ) |>
print(n=100)
# long format
df_long = df |>
gather(partnum, name, part1:part6, factor_key=TRUE)
# if df$part1-6 in df_people_small, then change string to [df_part1-6](gitfull)
df_long = left_join(df_long, df_people_small, by=c("name"))
df_long = df_long |>
mutate(name = paste("<a href=\"", gitfull, "\">", name, "</a>", sep = "")) |> #   <a href="https://pypi.org/project/plenpy/">plenoptic</a>
#mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long
# back to wide format
df_long$id <- factor(df_long$id)
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1),
part2!="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6!="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("...1", "id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
View(df2)
col_order <- c("id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
suppressWarnings(library(DT))
suppressWarnings(library(tidyverse))
df = read_csv("./Data-enrichment/Data/projects_domain_people.csv")
df
df = df[, 2:10]
df
df = read_csv("./Data-enrichment/Data/projects_domain_people.csv")
df = df[, 2:ncol]
df$...1
library(tidyverse) # for most operations
rm(list = ls())
setwd("C:/Users/angel/Documents/GitHub/OLS-project-database/Data-enrichment")
## 2. Load data ----
df = read_delim("Data/projects_domain.csv") # Load data with added domain
df_people = read_delim("C:/Users/angel/Documents/GitHub/ols-program-paper/data/people.csv") # Load updated copy from the paper repo
## 3. data prep
colnames(df_people)[1] = c("githandle") #rename firs col
df_people_small = df_people |>
select(c("githandle", "first-name", "last-name")) |>
mutate(name = paste(`first-name`, `last-name`, sep = ' ')) |>
mutate(gitfull = paste("https://github.com/", githandle, sep = ''))  |>
select(c("name", "gitfull"))
df_people_small
#solve duplicates!!!!!
list_names = df_people_small |>
select(c(name)) |>
mutate(n=1) |>
group_by(name) |>
count(n) |>
filter(nn>1) |>
print()
df_people_small$drop = 0
df_people_small$drop[df_people_small$gitfull=="https://github.com/david-selassie-opoku"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/gladys-jerono-rotich"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/hilyatuz-zahroh"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/iris-san-pedro"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/laurah-nyasita-ondari"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/marta-lloret-llinares"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/muhammetcelik"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/pradeep-eranti"] = 1
df_people_small$drop[df_people_small$gitfull=="https://github.com/umar-farouk-ahmad"] = 1
df_people_small = df_people_small |>
filter(drop == 0)
colnames(df_people_small)
cols = c("name", "gitfull")
df_people_small = df_people_small[, cols]
# split participants
df = df |>
separate(participants, into = c("part1", "part2", "part3", "part4", "part5", "part6"), sep=",[ ]" ) |>
print(n=100)
# long format
df_long = df |>
gather(partnum, name, part1:part6, factor_key=TRUE)
# if df$part1-6 in df_people_small, then change string to [df_part1-6](gitfull)
df_long = left_join(df_long, df_people_small, by=c("name"))
df_long = df_long |>
mutate(name = paste("<a href=\"", gitfull, "\">", name, "</a>", sep = "")) |> #   <a href="https://pypi.org/project/plenpy/">plenoptic</a>
#mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long
# back to wide format
df_long$id <- factor(df_long$id)
df_wide = df_long |>
pivot_wider(names_from = partnum, values_from = name)
df_wide = df_wide|>
mutate(participants = case_when(
part2=="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1),
part2!="<a href=\"NA\">NA</a>" & part3=="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4=="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5=="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6=="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5,  sep=", "),
part2!="<a href=\"NA\">NA</a>" & part3!="<a href=\"NA\">NA</a>" & part4!="<a href=\"NA\">NA</a>" & part5!="<a href=\"NA\">NA</a>" & part6!="<a href=\"NA\">NA</a>" ~ paste(part1, part2, part3, part4, part5, part6, sep=", ")))
df_wide$participants
# clean
df_wide = df_wide |>
select(-c("part1", "part2", "part3", "part4", "part5", "part6"))
col_order <- c("id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
View(df_people)
df
### Mentors  ------
# split participants
df = df |>
separate(mentors, into = c("ment1", "ment2", "ment3"), sep=",[ ]" ) |>
print(n=100)
# long format
df_long2 = df |>
gather(mentnum, name, ment1:ment3, factor_key=TRUE)
# if df$part1-6 in df_people_small, then change string to [df_part1-6](gitfull)
df_long2 = left_join(df_long2, df_people_small, by=c("name"))
df_long2 = df_long2 |>
mutate(name = paste("<a href=\"", gitfull, "\">", name, "</a>", sep = "")) |> #   <a href="https://pypi.org/project/plenpy/">plenoptic</a>
#mutate(name = paste("[", name, "](", gitfull, ")", sep = "")) |>
select(-c("gitfull"))
df_long2
# back to wide format
df_long2$id <- factor(df_long2$id)
df_wide2 = df_long2 |>
pivot_wider(names_from = mentnum, values_from = name)
df_wide2 = df_wide2|>
mutate(mentors = case_when(
ment2=="<a href=\"NA\">NA</a>" & ment3=="<a href=\"NA\">NA</a>" ~ paste(ment1),
ment2!="<a href=\"NA\">NA</a>" & ment3=="<a href=\"NA\">NA</a>" ~ paste(ment1, ment2, sep=", "),
ment2!="<a href=\"NA\">NA</a>" & ment3!="<a href=\"NA\">NA</a>" ~ paste(ment1, ment2, ment3, sep=", ")))
df_wide2$mentors
df_wide
View(df_wide2)
df_wide2 = df_wide2 |>
select(c("id", "mentors"))
View(df_wide2)
df_wide = left_join(df_wide, df_wide2, by=c("id"))
View(df_wide)
df_wide = df_wide |>
select(-c("mentors.x")) |>
rename(mentors=mentors.y)
col_order <- c("id", "title", "participants", "mentors","description", "cohort","keywords", "status", "domain")
df2 <- df_wide[, col_order]
View(df2)
# export
write.csv(df2, file="Data/projects_domain_people.csv", fileEncoding = "UTF-8")
1122-1072
library(tidyverse) # for most operations
# for wordclouds
#install.packages("wordcloud")
library(wordcloud)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("wordcloud2")
library(wordcloud2)
# for embeddings
#install.packages("word2vec")
library(word2vec)
## 2. Load data ----
#df = read_delim("Data/projects_copied.csv") # Load local copy (not updated)
df = read_delim("C:/Users/angel/Documents/GitHub/ols-program-paper/data/projects.csv") # Load updated copy from the paper repo
domains = read_delim("Data/domains.csv")
## 3. Prepare data ----
# rename name field to title
df = df |>
rename(title = name)
# add identifier for projects - OLS + cohort + number
df = df |>
group_by(cohort) |>
mutate(row = row_number()) |>
ungroup()
df = df |>
mutate(id = paste("OLS", df$cohort, df$row, sep = "-")) |>
print()
df$id
#make list of keywords, retain project ID
df2 = df |>
mutate(keywords = strsplit(keywords, ",[ ]")) |>
unnest(keywords) |>
#  group_by(id) |>
#  mutate(row = row_number()) |>
# spread(row, keywords) |>
print()
df2 = df2 |>
dplyr::select(c("keywords", "id")) |>
mutate(keywords = tolower(keywords)) |> # remove capitalization to avoid duplication
mutate(keywords = str_trim(keywords, "right")) |>  #remove all trailing whitespace
mutate(keywords = str_trim(keywords, "left")) |> #remove all leading whitespace
print(n=100)
# make list of unique keywords, remove duplicates
(list = unique(df2$keywords))
# with occurrences
df3 = df2 |>
mutate(n=1) |>
dplyr::select("keywords", "n") |>
group_by(keywords) |>
count(n) |>
ungroup() |>
print()
# remove capitalisation
domains = domains |>
mutate(discipline=tolower(discipline))
(listdf3 = unique(df3$keywords))
## 4. Wordcloud -----
set.seed(42) # for reproducibility
## 5. String match
(unique(df2$keywords)%in%unique(domains$discipline))
df_enriched = left_join(df2, domains, by=c("keywords" = "discipline"))
count(df_enriched, domain)
df_dom = left_join(df, df_enriched, by="id", multiple = "any") |>
dplyr::select(!keywords.y, !row) |>
rename(keywords = keywords.x) |>
print(n=100)
col_order <- c("id", "title","participants","mentors","description","cohort", "keywords", "status", "domain")
df_dom = df_dom[, col_order]
df_dom
# export
write.csv(df_dom, file="Data/projects_domain.csv", fileEncoding = "UTF-8")
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 50, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 2, max.freq = 50, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 50, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 50, colors=brewer.pal(8, "Dark2")))
df3
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 2, max.freq = 50, colors=brewer.pal(8, "Dark2")))
View(df3)
summary(df3$nn)
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 63, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark1")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark1")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(2, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(5, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(9, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(17, "Dark2")))
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark2")))
? wordcloud
? wordcloud2
(wc2 = wordcloud2(df3, size = 1)
#install.packages("wordcloud2")
library(wordcloud2)
install.packages("wordcloud2")
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark2")))
? wordcloud
(wc1 = wordcloud(words = df3$keywords, freq = df3$nn, min.freq = 1, max.freq = 18, colors=brewer.pal(8, "Dark2")))
